<!--
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 *
 * Author: Pablo Ojanguren (pablojan@gmail.com)
 -->
<project name="SwellRT" default="dist">
  <description>SwellRT, a Real-Time Federated Collaboration Framework</description>

  <!-- Import original Wave build scripts -->
  <import file="build.xml"/>

  <!-- Import SwellRT build properties -->
  <property file="build-swellrt.properties"/>

  <!-- Android's Wave dependecies  -->

  <fileset dir="${build.src.dir}" id="android-wave-dep-fileset">
   <include name="org/waveprotocol/wave/model/**/*" />
   <include name="org/waveprotocol/wave/common/logging/*" />
   <include name="org/waveprotocol/wave/communication/**/*" />
   <include name="org/waveprotocol/wave/concurrencycontrol/**/*" />
   <include name="org/waveprotocol/wave/client/state/BlipReadStateMonitor.*" />
   <include name="org/waveprotocol/wave/client/state/BlipReadStateMonitor$*.*" />

   <exclude name="org/waveprotocol/wave/**/*.xml" />
   <exclude name="org/waveprotocol/wave/communication/gwt/**/*" />
   <exclude name="org/waveprotocol/wave/model/testing/**/*" />
   <exclude name="org/waveprotocol/wave/model/conversation/testing/**/*" />
   <exclude name="org/waveprotocol/wave/concurrencycontrol/testing/**/*" />

   <include name="org/waveprotocol/box/common/*" />
   <exclude name="org/waveprotocol/box/common/*.xml" />

   <include name="org/swellrt/model/**/*" />
   <exclude name="org/swellrt/model/**/*.xml" />
  </fileset>

  <fileset dir="${build.messages.dir}" id="android-wave-msg-fileset">
      <include name="**/*" />
      <exclude name="**/jso/**" />
  </fileset>

  <fileset dir="${build.proto.dir}" id="android-wave-proto-fileset" includes="**/*" />


  <!-- Android Targets -->

  <target name="get-third-party-swellrt-android">
    <get dest="${swellrt.android.lib.dir}" usetimestamp="true" skipexisting="true">

      <!-- Atmosphere & Http Client staff -->
      <url url="http://central.maven.org/maven2/com/ning/async-http-client/1.8.14/async-http-client-1.8.14.jar" />
      <url url="http://central.maven.org/maven2/org/glassfish/grizzly/grizzly-framework/2.3.18/grizzly-framework-2.3.18.jar" />
      <url url="http://central.maven.org/maven2/org/glassfish/grizzly/grizzly-http/2.3.18/grizzly-http-2.3.18.jar" />
      <url url="http://central.maven.org/maven2/org/glassfish/grizzly/grizzly-http/2.3.18/grizzly-http-2.3.18.jar" />
      <url url="http://central.maven.org/maven2/org/glassfish/grizzly/grizzly-websockets/2.3.18/grizzly-websockets-2.3.18.jar" />
      <url url="http://central.maven.org/maven2/org/atmosphere/wasync/1.4.3/wasync-1.4.3.jar" />

      <url url="http://central.maven.org/maven2/com/google/code/gson/gson/2.2.4/gson-2.2.4.jar" />
      <url url="http://central.maven.org/maven2/com/google/guava/guava/15.0/guava-15.0.jar" />
      <url url="http://central.maven.org/maven2/com/google/code/findbugs/jsr305/2.0.1/jsr305-2.0.1.jar" />
      <url url="http://central.maven.org/maven2/com/google/protobuf/protobuf-java/2.5.0/protobuf-java-2.5.0.jar" />

      <url url="http://www.slf4j.org/android/slf4j-android-1.6.1-RC1.jar" />

    </get>

  </target>


  <target name="dist-swellrt-android-dep"
   description="Assembles JAR artifact containing classes shared with Wave"
   depends="compile, compile-messages">

   <jar destfile="${swellrt.android.lib.dir}/swellrt-android-dep-${swellrt.version}.jar">

    <fileset refid="android-wave-dep-fileset" />
    <fileset refid="android-wave-msg-fileset" />
    <fileset refid="android-wave-proto-fileset" />

    <manifest>
     <attribute name="Specification-Vendor" value="The SwellRT project" />
     <attribute name="Specification-Title"
      value="Apache Wave shared components for SwellRT Android" />
     <attribute name="Specification-Version" value="${swellrt.version}" />
     <attribute name="Implementation-Vendor" value="The SwellRT project" />
     <attribute name="Implementation-Title"
      value="Apache Wave shared components for SwellRT Android" />
     <attribute name="Implementation-Version" value="${swellrt.version}" />
     <attribute name="Built-By" value="${user.name}" />
    </manifest>
    <metainf dir="." includes="LICENSE, NOTICE" />
   </jar>
  </target>


  <target name="compile-swellrt-android"
    description="Compile SwellRT Android service classes"
    depends="get-third-party-swellrt-android, dist-swellrt-android-dep">

    <delete dir="${swellrt.android.build.dir}"/>
    <mkdir dir="${swellrt.android.build.dir}"/>

    <javac
        destdir="${swellrt.android.build.dir}"
        srcdir="${swellrt.android.src.dir}"
        debug="false">

    <classpath>
        <fileset dir="${android.sdk.dir}" includes="android.jar" />
        <fileset dir="${swellrt.android.lib.dir}" includes="*.jar" />
    </classpath>


      <compilerarg value="-Xlint:all"/>
      <compilerarg value="-Xlint:-serial"/>
      <!-- Deprecation warnings are generated for .class files for some
           compilers, e.g. org.hamcrest.Matcher -> org.hamcrest.BaseMatcher. -->
      <compilerarg value="-Xlint:-deprecation"/>
      <compilerarg value="-Werror"/>

    </javac>

  </target>

  <target name="dist-swellrt-android"
   description="Assembles SwellRT JAR artifact all-in-one"
   depends="compile-swellrt-android">

    <delete dir="${swellrt.android.dist.dir}"/>
    <mkdir dir="${swellrt.android.dist.dir}"/>

   <jar destfile="${swellrt.android.dist.dir}/swellrt-android-${swellrt.version}.jar">

    <fileset refid="android-wave-dep-fileset" />
    <fileset refid="android-wave-msg-fileset" />
    <fileset refid="android-wave-proto-fileset" />
    <fileset dir="${swellrt.android.build.dir}">
        <include name="**/*" />
    </fileset>

    <manifest>
     <attribute name="Specification-Vendor" value="The SwellRT project" />
     <attribute name="Specification-Title"
      value="Apache Wave shared components for SwellRT-Android" />
     <attribute name="Specification-Version" value="${waveinabox.version}" />
     <attribute name="Implementation-Vendor" value="The SwellRT project" />
     <attribute name="Implementation-Title"
      value="Apache Wave shared components for SwellRT-Android" />
     <attribute name="Implementation-Version" value="${waveinabox.version}" />
     <attribute name="Built-By" value="${user.name}" />
    </manifest>
    <metainf dir="." includes="LICENSE, NOTICE" />
   </jar>

  </target>



  <!-- Web / JavaScript Targets -->

  <target name="swellrt-compile-gwt-dep">
    <uptodate targetfile="${dep}/compile-gwt" property="skip.swellrt-compile-gwt">
      <srcfiles dir="${lib.dir}"/>
      <srcfiles dir="${src.dir}"/>
      <srcfiles dir="${gen.dir}/messages"/>
    </uptodate>
  </target>


  <target name="swellrt-webclient-compile" depends="compile, swellrt-compile-gwt-dep"
      description="GWT compile of a restricted set of permutations suitable for development."
      unless="skip.swellrt-compile-gwt">
    <java failonerror="true" fork="true" classname="com.google.gwt.dev.Compiler">
      <classpath>
        <pathelement location="${src.dir}"/>
        <pathelement location="${gen.dir}/messages"/>
        <path refid="libpath"/>
        <path refid="test.libpath"/>
      </classpath>
      <jvmarg value="-Xmx1024M"/>
      <!-- Human-readable JS. -->
      <arg line="-style PRETTY"/>
      <!-- Less optimal JS, but faster compile. -->
      <arg line="-draftCompile"/>
      <!-- Assertions on. -->
      <arg line="-ea"/>
      <arg line="${gwt.args}"/>
      <arg value="org.swellrt.webclient.WebClientMod"/>
    </java>
    <!-- Only one GWT compile output is valid at any one time. -->
    <delete file="${dep}/compile-gwt-dev"/>
    <delete file="${dep}/compile-gwt"/>
    <touch file="${dep}/swellrt-compile-gwt"/>
  </target>

  <target name="swellrt-webclient-hosted" depends="compile"
      description="Runs the hosted mode server, for debugging the GWT client in a JVM.">
    <java failonerror="true" fork="true" classname="com.google.gwt.dev.DevMode">
      <classpath>
        <pathelement location="${src.dir}"/>
        <pathelement location="${build.src.dir}"/>
        <pathelement location="${gen.dir}/messages"/>
        <path refid="libpath"/>
      </classpath>
      <jvmarg value="-Xmx1024M"/>
      <jvmarg value="-ea"/>
      <jvmarg value="-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=8001"/>
      <jvmarg value="-Djava.util.logging.config.file=wiab-logging.conf" />
      <arg value="-noserver" />
      <arg line="-bindAddress 127.0.0.1" />
      <arg line="${gwt.args}"/>
      <arg line="-startupUrl http://localhost:9898"/>
      <arg line="-logLevel DEBUG"/>
      <arg value="org.swellrt.webclient.WebClientMod"/>
    </java>
  </target>


  <target name="swellrt-webclient-superdev" depends="compile"
      description="Runs the superdev mode, for debugging the GWT client in a browser.">
    <java failonerror="true" fork="true" classname="com.google.gwt.dev.codeserver.CodeServer">
      <classpath>
        <pathelement location="${lib.codegen}/gwt-dev-2.6.1.jar" />
        <pathelement location="${lib.codegen}/gwt-codeserver-2.6.1.jar" />
        <pathelement location="${src.dir}"/>
        <pathelement location="${gen.dir}/messages"/>
        <path refid="libpath"/>
      </classpath>
      <arg line="${gwt.args}"/>
      <arg line="-src src"/>
      <arg value="org.swellrt.webclient.WebClientMod"/>
    </java>
  </target>




  <target name="swellrt-js-compile-dev" depends="compile"
      description="GWT compile of a restricted set of permutations suitable for development.">
    <java failonerror="true" fork="true" classname="com.google.gwt.dev.Compiler">
      <classpath>
        <pathelement location="${src.dir}"/>
        <pathelement location="${gen.dir}/messages"/>
        <path refid="libpath"/>
        <path refid="test.libpath"/>
      </classpath>
      <jvmarg value="-Xmx1024M"/>
      <!-- Human-readable JS. -->
      <arg line="-style PRETTY"/>
      <!-- Less optimal JS, but faster compile. -->
      <arg line="-draftCompile"/>
      <!--
      <arg line="-logLevel DEBUG"/>
      -->
      <!-- Assertions on. -->
      <arg line="-ea"/>
      <arg line="${gwt.args}"/>
      <arg value="org.swellrt.api.SwellRT"/>
    </java>
  </target>


  <target name="swellrt-js-compile" depends="compile"
      description="GWT compile to production JavaScript">
    <java failonerror="true" fork="true" classname="com.google.gwt.dev.Compiler">
      <classpath>
        <pathelement location="${src.dir}"/>
        <pathelement location="${gen.dir}/messages"/>
        <path refid="libpath"/>
        <path refid="test.libpath"/>
      </classpath>
      <jvmarg value="-Xmx1024M"/>
      <!-- Small Javascript size. -->
      <arg line="-style OBFUSCATED"/>
      <!-- Do not include class and package names in compiled JS. -->
      <arg line="-XdisableClassMetadata"/>
      <arg line="-XdisableCastChecking"/>
      <arg line="-localWorkers 4"/>
      <arg line="${gwt.args}"/>
      <arg value="org.swellrt.api.SwellRT"/>
    </java>
  </target>


  <target name="swellrt-js-hosted" depends="compile"
      description="Runs the hosted mode server, for debugging the GWT client in a JVM.">
    <java failonerror="true" fork="true" classname="com.google.gwt.dev.DevMode">
      <classpath>
        <pathelement location="${src.dir}"/>
        <pathelement location="${build.src.dir}"/>
        <pathelement location="${gen.dir}/messages"/>
        <path refid="libpath"/>
      </classpath>
      <jvmarg value="-Xmx1024M"/>
      <jvmarg value="-ea"/>
      <jvmarg value="-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=8001"/>
      <arg value="-noserver" />
      <arg line="-bindAddress 127.0.0.1" />
      <arg line="${gwt.args}"/>
      <arg line="-startupUrl http://localhost:9898"/>
      <arg line="-logLevel DEBUG"/>
      <arg value="org.swellrt.api.SwellRT"/>
    </java>
  </target>

  <target name="swellrt-js-superdev" depends="compile"
      description="Runs the superdev mode, for debugging the GWT client in a browser.">
    <java failonerror="true" fork="true" classname="com.google.gwt.dev.codeserver.CodeServer">
      <classpath>
        <pathelement location="${lib.codegen}/gwt-dev-2.6.1.jar" />
        <pathelement location="${lib.codegen}/gwt-codeserver-2.6.1.jar" />
        <pathelement location="${src.dir}"/>
        <pathelement location="${build.src.dir}"/>
        <pathelement location="${gen.dir}/messages"/>
        <path refid="libpath"/>
      </classpath>
      <arg line="${gwt.args}"/>
      <arg line="-src src"/>
      <arg value="org.swellrt.api.SwellRT"/>
    </java>
  </target>


  <target name="swellrt-get-third-party-test" description="Download SwellRT testing third party dependencies">
    <get dest="${basedir}/selenium" usetimestamp="true" skipexisting="true">
      <url url="http://selenium-release.storage.googleapis.com/2.44/selenium-java-2.44.0.zip"/>
    </get>
    <unzip src="${basedir}/selenium/selenium-java-2.44.0.zip"
           dest="${basedir}/selenium/lib">
      <patternset>
        <include name="**/*.jar"/>
      </patternset>
    </unzip>
  </target>

   <target name="swellrt-js-compile-test" depends="swellrt-get-third-party-test" description="Build SwellRT Selenium tests">
     <echo message="Compile SwellRT Selenium Test"/>
     <javac srcdir="${basedir}/selenium" destdir="${basedir}/selenium" debug="true">
       <classpath>
         <fileset dir="${basedir}/selenium/lib">
           <include name="**/*.jar"/>
         </fileset>
       </classpath>
     </javac>
   </target>

  <target name="swellrt-js-test" depends="swellrt-js-compile-test"
       description="Test SwellRT against a running Wave Server instance">
       <condition property="driverpath" value="/usr/local/bin/chromedriver">
         <not>
           <isset property="driverpath"/>
         </not>
       </condition>
     <java failonerror="true" fork="true" classname="TestWaveJS">
       <sysproperty key="webdriver.chrome.driver" value="${driverpath}"></sysproperty>
       <classpath>
           <pathelement location="${basedir}/selenium/"/>
           <fileset dir="${basedir}/selenium/lib">
             <include name="**/*.jar"/>
           </fileset>
       </classpath>
       <!--
       <jvmarg value="-Xmx1024M"/>
        -->
     </java>
   </target>

  <target name="swellrt-clean" description="Cleans up the build artifacts and temporary directories">
    <delete dir="war/swellrt"/>
  </target>

  <target name="dist" description="Takes all the necessary steps to build the jar" depends="get-third-party, compile-gwt, swellrt-js-compile, dist-server">
  </target>

  <target name="dist-dev" description="Takes all the necessary steps to build a development jar" depends="get-third-party, compile-gwt, swellrt-js-compile-dev, dist-server">
  </target>


</project>
